openapi: 3.0.0
info:
  title: CS 챗봇 관리자 인증 API
  description: 관리자 로그인 및 토큰 검증 API
  version: 1.0.0
  contact:
    name: CS 챗봇 팀
    email: admin@cs-chatbot.com

servers:
  - url: http://localhost:3001
    description: NestJS 로컬 서버

paths:
  /auth/login:
    post:
      summary: 관리자 로그인
      description: 관리자 계정으로 로그인하여 JWT 토큰을 발급받습니다
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  description: 관리자 사용자명
                  example: admin
                password:
                  type: string
                  description: 관리자 비밀번호
                  example: admin123
      responses:
        '200':
          description: 로그인 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      access_token:
                        type: string
                        description: JWT 액세스 토큰
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                      expires_in:
                        type: integer
                        description: 토큰 만료 시간 (초)
                        example: 3600
        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                success: false
                error:
                  message: 사용자명과 비밀번호는 필수입니다
        '401':
          description: 인증 실패
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                success: false
                error:
                  message: 인증에 실패했습니다
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/profile:
    get:
      summary: 프로필 조회
      description: JWT 토큰을 사용하여 관리자 프로필 정보를 조회합니다
      tags:
        - Authentication
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 프로필 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      username:
                        type: string
                        example: admin
                      userId:
                        type: string
                        example: admin
        '401':
          description: 인증 실패
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                success: false
                error:
                  message: 인증 토큰이 필요합니다



components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT 토큰을 Authorization 헤더에 Bearer 형식으로 전달

  schemas:
    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: object
          properties:
            message:
              type: string
              description: 오류 메시지

tags:
  - name: Authentication
    description: 관리자 인증 관련 API