{
 "Resources": {
  "LambdaExecutionRoleD5C26073": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "cs-chatbot-api/LambdaExecutionRole/Resource"
   }
  },
  "LambdaExecutionRoleDefaultPolicy6D69732F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::ImportValue": "cs-chatbot-data:ExportsOutputFnGetAttCSInquiryTableFB9F4D47Arn1628D4EA"
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::ImportValue": "cs-chatbot-data:ExportsOutputFnGetAttCSInquiryTableFB9F4D47Arn1628D4EA"
           },
           "/index/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "bedrock:InvokeModel",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LambdaExecutionRoleDefaultPolicy6D69732F",
    "Roles": [
     {
      "Ref": "LambdaExecutionRoleD5C26073"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "cs-chatbot-api/LambdaExecutionRole/DefaultPolicy/Resource"
   }
  },
  "HealthCheckServiceRoleC964F23C": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "cs-chatbot-api/HealthCheck/ServiceRole/Resource"
   }
  },
  "HealthCheckA1C381C7": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-us-east-1"
     },
     "S3Key": "146d6864d7d98e4b38aea08a511eb6a29c5fa926d23d198256df12c8f803d829.zip"
    },
    "Handler": "health_check.lambda_handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "HealthCheckServiceRoleC964F23C",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 10
   },
   "DependsOn": [
    "HealthCheckServiceRoleC964F23C"
   ],
   "Metadata": {
    "aws:cdk:path": "cs-chatbot-api/HealthCheck/Resource",
    "aws:asset:path": "asset.146d6864d7d98e4b38aea08a511eb6a29c5fa926d23d198256df12c8f803d829",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "InquiryHandlerE9AA7F76": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-us-east-1"
     },
     "S3Key": "146d6864d7d98e4b38aea08a511eb6a29c5fa926d23d198256df12c8f803d829.zip"
    },
    "Environment": {
     "Variables": {
      "DYNAMODB_TABLE": {
       "Fn::ImportValue": "cs-chatbot-data:ExportsOutputRefCSInquiryTableFB9F4D4704589F40"
      }
     }
    },
    "Handler": "inquiry_handler.lambda_handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "LambdaExecutionRoleD5C26073",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 30
   },
   "DependsOn": [
    "LambdaExecutionRoleDefaultPolicy6D69732F",
    "LambdaExecutionRoleD5C26073"
   ],
   "Metadata": {
    "aws:cdk:path": "cs-chatbot-api/InquiryHandler/Resource",
    "aws:asset:path": "asset.146d6864d7d98e4b38aea08a511eb6a29c5fa926d23d198256df12c8f803d829",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "AIResponseGenerator509A2058": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-us-east-1"
     },
     "S3Key": "146d6864d7d98e4b38aea08a511eb6a29c5fa926d23d198256df12c8f803d829.zip"
    },
    "Environment": {
     "Variables": {
      "DYNAMODB_TABLE": {
       "Fn::ImportValue": "cs-chatbot-data:ExportsOutputRefCSInquiryTableFB9F4D4704589F40"
      }
     }
    },
    "Handler": "ai_response_generator.lambda_handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "LambdaExecutionRoleD5C26073",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 30
   },
   "DependsOn": [
    "LambdaExecutionRoleDefaultPolicy6D69732F",
    "LambdaExecutionRoleD5C26073"
   ],
   "Metadata": {
    "aws:cdk:path": "cs-chatbot-api/AIResponseGenerator/Resource",
    "aws:asset:path": "asset.146d6864d7d98e4b38aea08a511eb6a29c5fa926d23d198256df12c8f803d829",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CSChatbotAPIF9C23C8C": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "CS Chatbot API"
   },
   "Metadata": {
    "aws:cdk:path": "cs-chatbot-api/CSChatbotAPI/Resource"
   }
  },
  "CSChatbotAPIDeployment42D3E63Cf7457b757387850b6ed7a3f09aacec1a": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "CSChatbotAPIF9C23C8C"
    }
   },
   "DependsOn": [
    "CSChatbotAPIairesponseOPTIONSCE6C2678",
    "CSChatbotAPIairesponsePOST5BFF32A1",
    "CSChatbotAPIairesponseA35534FC",
    "CSChatbotAPIGET3FC2A948",
    "CSChatbotAPIinquiriesOPTIONSD065F08B",
    "CSChatbotAPIinquiriesPOSTFF43EF4C",
    "CSChatbotAPIinquiries590F097E",
    "CSChatbotAPIOPTIONS7EBA0089"
   ],
   "Metadata": {
    "aws:cdk:path": "cs-chatbot-api/CSChatbotAPI/Deployment/Resource",
    "aws:cdk:do-not-refactor": true
   }
  },
  "CSChatbotAPIDeploymentStageprodBC09F56E": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "CSChatbotAPIDeployment42D3E63Cf7457b757387850b6ed7a3f09aacec1a"
    },
    "RestApiId": {
     "Ref": "CSChatbotAPIF9C23C8C"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "cs-chatbot-api/CSChatbotAPI/DeploymentStage.prod/Resource"
   }
  },
  "CSChatbotAPIOPTIONS7EBA0089": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "CSChatbotAPIF9C23C8C",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "CSChatbotAPIF9C23C8C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cs-chatbot-api/CSChatbotAPI/Default/OPTIONS/Resource"
   }
  },
  "CSChatbotAPIGETApiPermissioncschatbotapiCSChatbotAPI86443238GET2CF64F7B": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "HealthCheckA1C381C7",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CSChatbotAPIF9C23C8C"
       },
       "/",
       {
        "Ref": "CSChatbotAPIDeploymentStageprodBC09F56E"
       },
       "/GET/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "cs-chatbot-api/CSChatbotAPI/Default/GET/ApiPermission.cschatbotapiCSChatbotAPI86443238.GET.."
   }
  },
  "CSChatbotAPIGETApiPermissionTestcschatbotapiCSChatbotAPI86443238GET0C0F29B6": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "HealthCheckA1C381C7",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CSChatbotAPIF9C23C8C"
       },
       "/test-invoke-stage/GET/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "cs-chatbot-api/CSChatbotAPI/Default/GET/ApiPermission.Test.cschatbotapiCSChatbotAPI86443238.GET.."
   }
  },
  "CSChatbotAPIGET3FC2A948": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "HealthCheckA1C381C7",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Fn::GetAtt": [
      "CSChatbotAPIF9C23C8C",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "CSChatbotAPIF9C23C8C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cs-chatbot-api/CSChatbotAPI/Default/GET/Resource"
   }
  },
  "CSChatbotAPIinquiries590F097E": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "CSChatbotAPIF9C23C8C",
      "RootResourceId"
     ]
    },
    "PathPart": "inquiries",
    "RestApiId": {
     "Ref": "CSChatbotAPIF9C23C8C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cs-chatbot-api/CSChatbotAPI/Default/inquiries/Resource"
   }
  },
  "CSChatbotAPIinquiriesOPTIONSD065F08B": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CSChatbotAPIinquiries590F097E"
    },
    "RestApiId": {
     "Ref": "CSChatbotAPIF9C23C8C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cs-chatbot-api/CSChatbotAPI/Default/inquiries/OPTIONS/Resource"
   }
  },
  "CSChatbotAPIinquiriesPOSTApiPermissioncschatbotapiCSChatbotAPI86443238POSTinquiriesA273EBF1": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "InquiryHandlerE9AA7F76",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CSChatbotAPIF9C23C8C"
       },
       "/",
       {
        "Ref": "CSChatbotAPIDeploymentStageprodBC09F56E"
       },
       "/POST/inquiries"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "cs-chatbot-api/CSChatbotAPI/Default/inquiries/POST/ApiPermission.cschatbotapiCSChatbotAPI86443238.POST..inquiries"
   }
  },
  "CSChatbotAPIinquiriesPOSTApiPermissionTestcschatbotapiCSChatbotAPI86443238POSTinquiriesB0B7A67C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "InquiryHandlerE9AA7F76",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CSChatbotAPIF9C23C8C"
       },
       "/test-invoke-stage/POST/inquiries"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "cs-chatbot-api/CSChatbotAPI/Default/inquiries/POST/ApiPermission.Test.cschatbotapiCSChatbotAPI86443238.POST..inquiries"
   }
  },
  "CSChatbotAPIinquiriesPOSTFF43EF4C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "InquiryHandlerE9AA7F76",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CSChatbotAPIinquiries590F097E"
    },
    "RestApiId": {
     "Ref": "CSChatbotAPIF9C23C8C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cs-chatbot-api/CSChatbotAPI/Default/inquiries/POST/Resource"
   }
  },
  "CSChatbotAPIairesponseA35534FC": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "CSChatbotAPIF9C23C8C",
      "RootResourceId"
     ]
    },
    "PathPart": "ai-response",
    "RestApiId": {
     "Ref": "CSChatbotAPIF9C23C8C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cs-chatbot-api/CSChatbotAPI/Default/ai-response/Resource"
   }
  },
  "CSChatbotAPIairesponseOPTIONSCE6C2678": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CSChatbotAPIairesponseA35534FC"
    },
    "RestApiId": {
     "Ref": "CSChatbotAPIF9C23C8C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cs-chatbot-api/CSChatbotAPI/Default/ai-response/OPTIONS/Resource"
   }
  },
  "CSChatbotAPIairesponsePOSTApiPermissioncschatbotapiCSChatbotAPI86443238POSTairesponse2284731C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AIResponseGenerator509A2058",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CSChatbotAPIF9C23C8C"
       },
       "/",
       {
        "Ref": "CSChatbotAPIDeploymentStageprodBC09F56E"
       },
       "/POST/ai-response"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "cs-chatbot-api/CSChatbotAPI/Default/ai-response/POST/ApiPermission.cschatbotapiCSChatbotAPI86443238.POST..ai-response"
   }
  },
  "CSChatbotAPIairesponsePOSTApiPermissionTestcschatbotapiCSChatbotAPI86443238POSTairesponseED94A0DF": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AIResponseGenerator509A2058",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CSChatbotAPIF9C23C8C"
       },
       "/test-invoke-stage/POST/ai-response"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "cs-chatbot-api/CSChatbotAPI/Default/ai-response/POST/ApiPermission.Test.cschatbotapiCSChatbotAPI86443238.POST..ai-response"
   }
  },
  "CSChatbotAPIairesponsePOST5BFF32A1": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AIResponseGenerator509A2058",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CSChatbotAPIairesponseA35534FC"
    },
    "RestApiId": {
     "Ref": "CSChatbotAPIF9C23C8C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cs-chatbot-api/CSChatbotAPI/Default/ai-response/POST/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/02OUW6DQAxEz5L/xW1CeoCkVf+qInKAyFlc4gK7CHuFEOLu0S5Uzdc8z1hjH+CwP8LrDkfJbNVkLd9gvijaxuAo15mxg7n0LZn3H5e08C3bKY4rLabF7lYhzJ/BWWXvYvbMBQ0di7B3i5H8iiKkAqcoRnI4B9uQnlHIYM81Ko04wVyS6KnndHfDD+pbP3XkNLpP00WxTh+uUJL4MFhKnV+kd1/FcKO/dGtOvCz/dnosFrGr48530D7oYopJ79695LDP4W33K8zZEJxyR1Cu+gC0Yu/ITQEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "cs-chatbot-api/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "CSChatbotAPIEndpoint8729BAA5": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "CSChatbotAPIF9C23C8C"
      },
      ".execute-api.us-east-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "CSChatbotAPIDeploymentStageprodBC09F56E"
      },
      "/"
     ]
    ]
   }
  },
  "ApiUrl": {
   "Description": "CS Chatbot API Gateway URL",
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "CSChatbotAPIF9C23C8C"
      },
      ".execute-api.us-east-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "CSChatbotAPIDeploymentStageprodBC09F56E"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}